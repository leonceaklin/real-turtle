// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The turtle can clear the canvas 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
]
`;

exports[`The turtle can draw an arc clockwise 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "anticlockwise": false,
      "endAngle": 6.283185307179586,
      "radius": 100,
      "startAngle": 3.141592653589793,
      "x": 600,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle can draw an arc counterclockwise 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "anticlockwise": true,
      "endAngle": -3.141592653589793,
      "radius": 100,
      "startAngle": 0,
      "x": 400,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "arc",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle can fill the canvas 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "height": 150,
      "width": 300,
      "x": 0,
      "y": 0,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "rect",
  },
]
`;

exports[`The turtle can move back 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 600,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle can move forward 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle can write filled text 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
]
`;

exports[`The turtle can write outlined text 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
]
`;

exports[`The turtle passes advanced drawing tests like clearing the canvas correctly after drawing on it 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes advanced drawing tests like closing a path using .stroke 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {
      "x": 600,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes advanced drawing tests like drawing a diagonal line 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 570.7106781186548,
      "y": 429.28932188134524,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes advanced drawing tests like drawing a filled shape 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {
      "x": 600,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {
      "x": 600,
      "y": 300,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {
      "x": 700,
      "y": 300,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {
      "x": 700,
      "y": 500,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes advanced drawing tests like drawing a line after moving away from the origin using .penUp and .penDown 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 300,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes other functional tests like solving multiple drawing tasks in async mode 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 400,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;

exports[`The turtle passes other functional tests like working properly when .start is triggered more than once 1`] = `
Array [
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "beginPath",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 400,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "moveTo",
  },
  Object {
    "props": Object {
      "x": 500,
      "y": 300,
    },
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "lineTo",
  },
  Object {
    "props": Object {},
    "transform": Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    "type": "closePath",
  },
]
`;
